#!/bin/bash

# ÊµãËØï Provider Âíå Model Ë¶ÜÁõñÂäüËÉΩ

echo "üß™ Testing Provider and Model Override"
echo "======================================="
echo ""

echo "üìã Available options:"
echo ""
echo "1Ô∏è‚É£  Default (Zhipu + glm-4-flash):"
echo "   ./target/release/llm-link --app codex-cli"
echo ""
echo "2Ô∏è‚É£  Override provider to OpenAI:"
echo "   ./target/release/llm-link --app codex-cli --provider openai"
echo ""
echo "3Ô∏è‚É£  Override provider and model:"
echo "   ./target/release/llm-link --app codex-cli --provider openai --model gpt-4"
echo ""
echo "4Ô∏è‚É£  Override only model (keep Zhipu):"
echo "   ./target/release/llm-link --app codex-cli --model glm-4"
echo ""
echo "5Ô∏è‚É£  Use Anthropic Claude:"
echo "   ./target/release/llm-link --app codex-cli --provider anthropic --model claude-3-5-sonnet-20241022"
echo ""
echo "6Ô∏è‚É£  Use Ollama:"
echo "   ./target/release/llm-link --app codex-cli --provider ollama --model llama2"
echo ""

echo "======================================="
echo ""
echo "üîç Testing help message..."
echo ""

./target/release/llm-link --help | grep -A 3 "provider\|model"

echo ""
echo "======================================="
echo ""
echo "‚úÖ Provider override feature is ready!"
echo ""
echo "üìù Examples:"
echo ""
echo "# Use OpenAI GPT-4 instead of Zhipu"
echo "OPENAI_API_KEY=xxx \\"
echo "LLM_LINK_API_KEY=xxx \\"
echo "./target/release/llm-link --app codex-cli --provider openai --model gpt-4"
echo ""
echo "# Use Anthropic Claude"
echo "ANTHROPIC_API_KEY=xxx \\"
echo "LLM_LINK_API_KEY=xxx \\"
echo "./target/release/llm-link --app codex-cli --provider anthropic"
echo ""
echo "# Just change the model (keep Zhipu)"
echo "ZHIPU_API_KEY=xxx \\"
echo "LLM_LINK_API_KEY=xxx \\"
echo "./target/release/llm-link --app codex-cli --model glm-4"
echo ""

